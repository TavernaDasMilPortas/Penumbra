%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 5dd767b21c7a58049bad78e13e7921d6, type: 3}
  m_Name: teste
  m_EditorClassIdentifier: 
  documentTitle: teste
  pages:
  - pageName: pagina 1
    sideMode: 1
    frontText: 11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
    backTextpublic
      void ContinueReading()\r\n{\r\n    if (documentData == null || viewer == null)
      return;\r\n\r\n    var page = documentData.pages[currentPageIndex];\r\n\r\n   
      // TwoSide: se ainda n\xE3o mostramos o verso, mostrar agora\r\n    if (page.sideMode
      == DocumentPage.PageSideMode.TwoSide && !showingBackSide)\r\n    {\r\n       
      showingBackSide = true;\r\n        viewer.UpdatePage(this);\r\n        return;\r\n   
      }\r\n\r\n    // Pr\xF3xima p\xE1gina\r\n    if (currentPageIndex < documentData.pages.Count
      - 1)\r\n    {\r\n        currentPageIndex++;\r\n        showingBackSide = false;
      // sempre come\xE7ar a nova p\xE1gina pelo lado da frente\r\n        viewer.UpdatePage(this);\r\n   
      }\r\n    else\r\n    {\r\n        // \xDAltima p\xE1gina \u2192 fechar documento\r\n       
      CloseReading();\r\n    }\r\n}\r\n\r\npublic void PreviousReading()\r\n{\r\n   
      if (documentData == null || viewer == null) return;\r\n\r\n    var page = documentData.pages[currentPageIndex];\r\n\r\n   
      // Se a p\xE1gina atual for TwoSide e estamos no verso, volta para frente\r\n   
      if (page.sideMode == DocumentPage.PageSideMode.TwoSide && showingBackSide)\r\n   
      {\r\n        showingBackSide = false;\r\n        viewer.UpdatePage(this);\r\n       
      return;\r\n    }\r\n\r\n    // Voltar para p\xE1gina anterior\r\n    if (currentPageIndex
      > 0)\r\n    {\r\n        currentPageIndex--;\r\n        var prevPage = documentData.pages[currentPageIndex];\r\n\r\n       
      // Se a p\xE1gina anterior for TwoSide, come\xE7ar mostrando o verso (ao voltar)\r\n       
      showingBackSide = prevPage.sideMode == DocumentPage.PageSideMode.TwoSide ?
      true : false;\r\n        viewer.UpdatePage(this);\r\n    }\r\n}\r\npublic void
      ContinueReading()\r\n{\r\n    if (documentData == null || viewer == null) return;\r\n\r\n   
      var page = documentData.pages[currentPageIndex];\r\n\r\n    // TwoSide: se
      ainda n\xE3o mostramos o verso, mostrar agora\r\n    if (page.sideMode == DocumentPage.PageSideMode.TwoSide
      && !showingBackSide)\r\n    {\r\n        showingBackSide = true;\r\n       
      viewer.UpdatePage(this);\r\n        return;\r\n    }\r\n\r\n    // Pr\xF3xima
      p\xE1gina\r\n    if (currentPageIndex < documentData.pages.Count - 1)\r\n   
      {\r\n        currentPageIndex++;\r\n        showingBackSide = false; // sempre
      come\xE7ar a nova p\xE1gina pelo lado da frente\r\n        viewer.UpdatePage(this);\r\n   
      }\r\n    else\r\n    {\r\n        // \xDAltima p\xE1gina \u2192 fechar documento\r\n       
      CloseReading();\r\n    }\r\n}\r\n\r\npublic void PreviousReading()\r\n{\r\n   
      if (documentData == null || viewer == null) return;\r\n\r\n    var page = documentData.pages[currentPageIndex];\r\n\r\n   
      // Se a p\xE1gina atual for TwoSide e estamos no verso, volta para frente\r\n   
      if (page.sideMode == DocumentPage.PageSideMode.TwoSide && showingBackSide)\r\n   
      {\r\n        showingBackSide = false;\r\n        viewer.UpdatePage(this);\r\n       
      return;\r\n    }\r\n\r\n    // Voltar para p\xE1gina anterior\r\n    if (currentPageIndex
      > 0)\r\n    {\r\n        currentPageIndex--;\r\n        var prevPage = documentData.pages[currentPageIndex];\r\n\r\n       
      // Se a p\xE1gina anterior for TwoSide, come\xE7ar mostrando o verso (ao voltar)\r\n       
      showingBackSide = prevPage.sideMode == DocumentPage.PageSideMode.TwoSide ?
      true : false;\r\n        viewer.UpdatePage(this);\r\n    }\r\n}\r\npublic void
      ContinueReading()\r\n{\r\n    if (documentData == null || viewer == null) return;\r\n\r\n   
      var page = documentData.pages[currentPageIndex];\r\n\r\n    // TwoSide: se
      ainda n\xE3o mostramos o verso, mostrar agora\r\n    if (page.sideMode == DocumentPage.PageSideMode.TwoSide
      && !showingBackSide)\r\n    {\r\n        showingBackSide = true;\r\n       
      viewer.UpdatePage(this);\r\n        return;\r\n    }\r\n\r\n    // Pr\xF3xima
      p\xE1gina\r\n    if (currentPageIndex < documentData.pages.Count - 1)\r\n   
      {\r\n        currentPageIndex++;\r\n        showingBackSide = false; // sempre
      come\xE7ar a nova p\xE1gina pelo lado da frente\r\n        viewer.UpdatePage(this);\r\n   
      }\r\n    else\r\n    {\r\n        // \xDAltima p\xE1gina \u2192 fechar documento\r\n       
      CloseReading();\r\n    }\r\n}\r\n\r\npublic void PreviousReading()\r\n{\r\n   
      if (documentData == null || viewer == null) return;\r\n\r\n    var page = documentData.pages[currentPageIndex];\r\n\r\n   
      // Se a p\xE1gina atual for TwoSide e estamos no verso, volta para frente\r\n   
      if (page.sideMode == DocumentPage.PageSideMode.TwoSide && showingBackSide)\r\n   
      {\r\n        showingBackSide = false;\r\n        viewer.UpdatePage(this);\r\n       
      return;\r\n    }\r\n\r\n    // Voltar para p\xE1gina anterior\r\n    if (currentPageIndex
      > 0)\r\n    {\r\n        currentPageIndex--;\r\n        var prevPage = documentData.pages[currentPageIndex];\r\n\r\n       
      // Se a p\xE1gina anterior for TwoSide, come\xE7ar mostrando o verso (ao voltar)\r\n       
      showingBackSide = prevPage.sideMode == DocumentPage.PageSideMode.TwoSide ?
      true : false;\r\n        viewer.UpdatePage(this);\r\n    }\r\n}\r\npublic void
      ContinueReading()\r\n{\r\n    if (documentData == null || viewer == null) return;\r\n\r\n   
      var page = documentData.pages[currentPageIndex];\r\n\r\n    // TwoSide: se
      ainda n\xE3o mostramos o verso, mostrar agora\r\n    if (page.sideMode == DocumentPage.PageSideMode.TwoSide
      && !showingBackSide)\r\n    {\r\n        showingBackSide = true;\r\n       
      viewer.UpdatePage(this);\r\n        return;\r\n    }\r\n\r\n    // Pr\xF3xima
      p\xE1gina\r\n    if (currentPageIndex < documentData.pages.Count - 1)\r\n   
      {\r\n        currentPageIndex++;\r\n        showingBackSide = false; // sempre
      come\xE7ar a nova p\xE1gina pelo lado da frente\r\n        viewer.UpdatePage(this);\r\n   
      }\r\n    else\r\n    {\r\n        // \xDAltima p\xE1gina \u2192 fechar documento\r\n       
      CloseReading();\r\n    }\r\n}\r\n\r\npublic void PreviousReading()\r\n{\r\n   
      if (documentData == null || viewer == null) return;\r\n\r\n    var page = documentData.pages[currentPageIndex];\r\n\r\n   
      // Se a p\xE1gina atual for TwoSide e estamos no verso, volta para frente\r\n   
      if (page.sideMode == DocumentPage.PageSideMode.TwoSide && showingBackSide)\r\n   
      {\r\n        showingBackSide = false;\r\n        viewer.UpdatePage(this);\r\n       
      return;\r\n    }\r\n\r\n    // Voltar para p\xE1gina anterior\r\n    if (currentPageIndex
      > 0)\r\n    {\r\n        currentPageIndex--;\r\n        var prevPage = documentData.pages[currentPageIndex];\r\n\r\n       
      // Se a p\xE1gina anterior for TwoSide, come\xE7ar mostrando o verso (ao voltar)\r\n       
      showingBackSide = prevPage.sideMode == DocumentPage.PageSideMode.TwoSide ?
      true : false;\r\n        viewer.UpdatePage(this);\r\n    }\r\n}\r\n"
  - pageName: pagina 2
    sideMode: 1
    frontText: 3333333333333333333333333333333333333333333333333333333333
    backText: 4444
  - pageName: pagina 3
    sideMode: 0
    frontText: 55555555555555555555555555555
    backText: 
  documentMaterial: {fileID: -876546973899608171, guid: 5f161a13c3502404ebf15f00ab02c197, type: 3}
